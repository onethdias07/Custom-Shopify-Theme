{% comment %}
Password Reset Request Page
{% endcomment %}

<div class="reset-password-page">
  <div class="reset-password-container">
    <div class="reset-password-header">
      <div class="reset-password-icon">
        <svg width="48" height="48" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
          <rect x="3" y="11" width="18" height="11" rx="2" ry="2" stroke="currentColor" stroke-width="2"/>
          <circle cx="12" cy="16" r="1" fill="currentColor"/>
          <path d="M7 11V7a5 5 0 0 1 10 0v4" stroke="currentColor" stroke-width="2"/>
        </svg>
      </div>
      <h1 class="reset-password-title">Reset Your Password</h1>
      <p class="reset-password-subtitle">Enter your email address and we'll send you a link to reset your password.</p>
    </div>

    <div class="reset-password-content">
      {% form 'recover_customer_password' %}
        {% if form.posted_successfully? %}
          <div class="success-message">
            <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
              <path d="M22 11.08V12a10 10 0 1 1-5.93-9.14" stroke="currentColor" stroke-width="2"/>
              <polyline points="22,4 12,14.01 9,11.01" stroke="currentColor" stroke-width="2"/>
            </svg>
            <div>
              <h3>Check Your Email</h3>
              <p>We've sent a password reset link to your email address. Please check your inbox and follow the instructions to reset your password.</p>
            </div>
          </div>
          
          <div class="reset-actions">
            <a href="{{ routes.account_login_url }}" class="btn-secondary">Back to Login</a>
            <button type="button" onclick="location.reload()" class="btn-primary">Send Another Email</button>
          </div>
        {% else %}
          {% if form.errors %}
            <div class="error-message">
              <svg width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                <circle cx="12" cy="12" r="10" stroke="currentColor" stroke-width="2"/>
                <line x1="15" y1="9" x2="9" y2="15" stroke="currentColor" stroke-width="2"/>
                <line x1="9" y1="9" x2="15" y2="15" stroke="currentColor" stroke-width="2"/>
              </svg>
              <div>
                <h3>Unable to Send Reset Email</h3>
                {% for error in form.errors %}
                  <p>{{ error | first | capitalize }} {{ error | last }}</p>
                {% endfor %}
              </div>
            </div>
          {% endif %}

          <form class="reset-password-form" novalidate>
            <div class="form-group">
              <label for="recover-email" class="form-label">Email Address</label>
              <div class="input-wrapper">
                <input 
                  type="email" 
                  id="recover-email" 
                  name="email" 
                  class="form-input" 
                  placeholder="Enter your email address"
                  autocomplete="email"
                  required
                  {% if form.errors contains 'email' %}aria-invalid="true" aria-describedby="email-error"{% endif %}>
                <svg class="input-icon" width="20" height="20" viewBox="0 0 24 24" fill="none" xmlns="http://www.w3.org/2000/svg">
                  <path d="M4 4h16c1.1 0 2 .9 2 2v12c0 1.1-.9 2-2 2H4c-1.1 0-2-.9-2-2V6c0-1.1.9-2 2-2z" stroke="currentColor" stroke-width="2"/>
                  <polyline points="22,6 12,13 2,6" stroke="currentColor" stroke-width="2"/>
                </svg>
              </div>
              {% if form.errors contains 'email' %}
                <div id="email-error" class="field-error">
                  {{ form.errors.translated_fields['email'] | capitalize }} {{ form.errors.messages['email'] }}
                </div>
              {% endif %}
            </div>

            <button type="submit" class="btn-primary btn-full-width" id="reset-submit-btn">
              <span class="btn-text">Send Reset Link</span>
              <span class="btn-loading" style="display: none;">
                <svg class="spinner" width="20" height="20" viewBox="0 0 24 24">
                  <circle class="spinner-path" cx="12" cy="12" r="10" fill="none" stroke="currentColor" stroke-width="2"/>
                </svg>
                Sending...
              </span>
            </button>
          </form>

          <div class="reset-footer">
            <p class="footer-text">Remember your password?</p>
            <a href="{{ routes.account_login_url }}" class="footer-link">Back to Login</a>
          </div>

          <div class="reset-help">
            <div class="help-section">
              <h3>Need Help?</h3>
              <ul>
                <li>Make sure you're using the email address associated with your account</li>
                <li>Check your spam or junk folder if you don't see the email</li>
                <li>The reset link will expire after 24 hours for security</li>
              </ul>
            </div>
            
            <div class="contact-support">
              <p>Still having trouble? <a href="/pages/contact">Contact our support team</a></p>
            </div>
          </div>
        {% endif %}
      {% endform %}
    </div>
  </div>
</div>

<style>
  .reset-password-page {
    min-height: 100vh;
    display: flex;
    align-items: center;
    justify-content: center;
    background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
    padding: 40px 20px;
  }

  .reset-password-container {
    background: white;
    border-radius: 16px;
    box-shadow: 0 20px 60px rgba(0, 0, 0, 0.1);
    overflow: hidden;
    width: 100%;
    max-width: 480px;
    animation: slideUp 0.6s ease-out;
  }

  @keyframes slideUp {
    from {
      opacity: 0;
      transform: translateY(30px);
    }
    to {
      opacity: 1;
      transform: translateY(0);
    }
  }

  .reset-password-header {
    text-align: center;
    padding: 40px 40px 20px;
    background: var(--color-background-secondary, #f8f9fa);
  }

  .reset-password-icon {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    width: 80px;
    height: 80px;
    background: var(--color-primary, #2c3e50);
    color: white;
    border-radius: 50%;
    margin-bottom: 20px;
  }

  .reset-password-title {
    font-size: 1.8rem;
    color: var(--color-primary, #2c3e50);
    margin: 0 0 8px 0;
    font-weight: 600;
  }

  .reset-password-subtitle {
    color: var(--color-secondary, #6c757d);
    margin: 0;
    line-height: 1.5;
  }

  .reset-password-content {
    padding: 40px;
  }

  .success-message,
  .error-message {
    display: flex;
    gap: 16px;
    padding: 20px;
    border-radius: 12px;
    margin-bottom: 24px;
  }

  .success-message {
    background: #d1fae5;
    color: #065f46;
    border: 1px solid #a7f3d0;
  }

  .error-message {
    background: #fee2e2;
    color: #991b1b;
    border: 1px solid #fca5a5;
  }

  .success-message svg,
  .error-message svg {
    flex-shrink: 0;
    margin-top: 2px;
  }

  .success-message h3,
  .error-message h3 {
    margin: 0 0 4px 0;
    font-size: 1rem;
    font-weight: 600;
  }

  .success-message p,
  .error-message p {
    margin: 0;
    font-size: 14px;
  }

  .reset-password-form {
    margin-bottom: 32px;
  }

  .form-group {
    margin-bottom: 24px;
  }

  .form-label {
    display: block;
    margin-bottom: 8px;
    font-weight: 500;
    color: var(--color-primary, #2c3e50);
  }

  .input-wrapper {
    position: relative;
  }

  .form-input {
    width: 100%;
    padding: 14px 16px 14px 48px;
    border: 2px solid #e8e8e8;
    border-radius: 8px;
    font-size: 16px;
    transition: all 0.3s ease;
    background: white;
  }

  .form-input:focus {
    outline: none;
    border-color: var(--color-primary, #2c3e50);
    box-shadow: 0 0 0 3px rgba(44, 62, 80, 0.1);
  }

  .form-input:invalid {
    border-color: #dc3545;
  }

  .input-icon {
    position: absolute;
    left: 14px;
    top: 50%;
    transform: translateY(-50%);
    color: var(--color-secondary, #6c757d);
    pointer-events: none;
  }

  .field-error {
    color: #dc3545;
    font-size: 14px;
    margin-top: 8px;
  }

  .btn-primary,
  .btn-secondary {
    display: inline-flex;
    align-items: center;
    justify-content: center;
    gap: 8px;
    padding: 14px 24px;
    border-radius: 8px;
    text-decoration: none;
    font-weight: 500;
    transition: all 0.3s ease;
    border: 2px solid;
    cursor: pointer;
    font-size: 16px;
    min-height: 48px;
  }

  .btn-primary {
    background: var(--color-primary, #2c3e50);
    color: white;
    border-color: var(--color-primary, #2c3e50);
  }

  .btn-secondary {
    background: transparent;
    color: var(--color-primary, #2c3e50);
    border-color: var(--color-primary, #2c3e50);
  }

  .btn-full-width {
    width: 100%;
  }

  .btn-primary:hover {
    opacity: 0.9;
    transform: translateY(-1px);
    text-decoration: none;
  }

  .btn-secondary:hover {
    background: var(--color-primary, #2c3e50);
    color: white;
    text-decoration: none;
  }

  .btn-primary:disabled {
    opacity: 0.6;
    cursor: not-allowed;
    transform: none;
  }

  .btn-loading {
    display: none !important;
  }

  .btn-primary.loading .btn-text {
    display: none;
  }

  .btn-primary.loading .btn-loading {
    display: flex !important;
  }

  .spinner {
    animation: spin 1s linear infinite;
  }

  .spinner-path {
    stroke-dasharray: 90, 150;
    stroke-dashoffset: 0;
    stroke-linecap: round;
  }

  @keyframes spin {
    0% {
      transform: rotate(0deg);
    }
    100% {
      transform: rotate(360deg);
    }
  }

  .reset-actions {
    display: flex;
    gap: 12px;
    justify-content: center;
  }

  .reset-footer {
    text-align: center;
    padding: 20px 0;
    border-top: 1px solid #e8e8e8;
  }

  .footer-text {
    color: var(--color-secondary, #6c757d);
    margin: 0 0 8px 0;
  }

  .footer-link {
    color: var(--color-primary, #2c3e50);
    text-decoration: none;
    font-weight: 500;
  }

  .footer-link:hover {
    text-decoration: underline;
  }

  .reset-help {
    background: #f8f9fa;
    border-radius: 8px;
    padding: 24px;
    margin-top: 24px;
  }

  .help-section h3 {
    color: var(--color-primary, #2c3e50);
    margin: 0 0 12px 0;
    font-size: 1rem;
    font-weight: 600;
  }

  .help-section ul {
    margin: 0;
    padding-left: 20px;
    color: var(--color-secondary, #6c757d);
  }

  .help-section li {
    margin-bottom: 8px;
    font-size: 14px;
    line-height: 1.4;
  }

  .contact-support {
    margin-top: 20px;
    padding-top: 20px;
    border-top: 1px solid #e8e8e8;
    text-align: center;
  }

  .contact-support p {
    margin: 0;
    font-size: 14px;
    color: var(--color-secondary, #6c757d);
  }

  .contact-support a {
    color: var(--color-primary, #2c3e50);
    text-decoration: none;
    font-weight: 500;
  }

  .contact-support a:hover {
    text-decoration: underline;
  }

  /* Mobile Responsive */
  @media (max-width: 768px) {
    .reset-password-page {
      padding: 20px;
      align-items: flex-start;
    }

    .reset-password-container {
      margin-top: 40px;
    }

    .reset-password-header {
      padding: 30px 20px 20px;
    }

    .reset-password-content {
      padding: 30px 20px;
    }

    .reset-password-title {
      font-size: 1.5rem;
    }

    .reset-actions {
      flex-direction: column;
    }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const form = document.querySelector('.reset-password-form');
    const submitBtn = document.getElementById('reset-submit-btn');
    const emailInput = document.getElementById('recover-email');

    if (form && submitBtn) {
      form.addEventListener('submit', function(e) {
        // Show loading state
        submitBtn.classList.add('loading');
        submitBtn.disabled = true;
      });
    }

    // Email validation
    if (emailInput) {
      emailInput.addEventListener('input', function() {
        const isValid = this.checkValidity();
        if (isValid) {
          this.style.borderColor = '#28a745';
        } else if (this.value.length > 0) {
          this.style.borderColor = '#dc3545';
        } else {
          this.style.borderColor = '#e8e8e8';
        }
      });
    }
  });
</script>